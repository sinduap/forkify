{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuC,AAAvC,qCAAuC;AAEvC,KAAK,CAAC,UAAU,aAAe,CAAC;IAC9B,GAAG,CAAC,CAAC;QACH,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAC1B,CAA2E;QAE7E,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI;QAEhC,EAAE,GAAG,QAAQ,CAAC,EAAE,EACd,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM;QAGlD,KAAK,CAAC,CAAC,CACL,EAAE,GACF,KAAK,GACL,SAAS,GACT,UAAU,EAAE,SAAS,GACrB,SAAS,EAAE,QAAQ,GACnB,WAAW,GACX,YAAY,EAAE,WAAW,GACzB,QAAQ,IACV,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;QAEpB,KAAK,CAAC,MAAM,GAAG,CAAC;YACd,EAAE;YACF,KAAK;YACL,SAAS;YACT,SAAS;YACT,QAAQ;YACR,WAAW;YACX,QAAQ;YACR,WAAW;QACb,CAAC;QAED,KAAK,CAAC,MAAM,IAAI,qDAEH,EAAE,QAAQ,CAAC,wFAEZ,EAAE,KAAK,CAAC,0SAS6C,EAAE,WAAW,CAAC,8SAOf,EAAE,QAAQ,CAAC,w/BAgCrE,EAAE,WAAW,CACV,GAAG,EACD,CAAC,CACA,WAAW,GACX,QAAQ,GACR,IAAI,IACN,CAAC,IAAM,0LAImB,EAAE,QAAQ,IAAI,CAAG,GAAC,0FAEnB,EAAE,IAAI,CAAC,oBAClC,EAAE,WAAW,CAAC,+BAEb;UAEA,IAAI,CAAC,CAAE,GAAE,wQAQoB,EAAE,SAAS,CAAC,iJAKvC,EAAE,SAAS,CAAC,wNAQf;QAER,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,MAAM;IACzD,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,KAAK;IACnB,CAAC;AACH,CAAC;AAED,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst showRecipe = async () => {\n  try {\n    const response = await fetch(\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcf09'\n    );\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(`${data.error} ${response.status}`);\n    }\n\n    const {\n      id,\n      title,\n      publisher,\n      source_url: sourceUrl,\n      image_url: imageUrl,\n      ingredients,\n      cooking_time: cookingTime,\n      servings,\n    } = data.data.recipe;\n\n    const recipe = {\n      id,\n      title,\n      publisher,\n      sourceUrl,\n      imageUrl,\n      ingredients,\n      servings,\n      cookingTime,\n    };\n\n    const markup = `\n      <figure class=\"recipe__fig\">\n        <img src=${imageUrl} alt=\"Tomato\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${cookingTime}</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${servings}</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n          ${ingredients\n            .map(\n              ({\n                description,\n                quantity,\n                unit,\n              }) => `<li class=\"recipe__ingredient\">\n          <svg class=\"recipe__icon\">\n            <use href=\"src/img/icons.svg#icon-check\"></use>\n          </svg>\n          <div class=\"recipe__quantity\">${quantity || '-'}</div>\n          <div class=\"recipe__description\">\n            <span class=\"recipe__unit\">${unit}</span>\n            ${description}\n          </div>\n        </li>`\n            )\n            .join('')}\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${publisher}</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=${sourceUrl}\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>`;\n\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nshowRecipe();\n"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}